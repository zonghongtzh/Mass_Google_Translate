def google_translate(translate_from, translate_to, translate_objective_list):
    import pandas as pd
    from selenium import webdriver
    from selenium.webdriver.support.ui import WebDriverWait
    from selenium.webdriver.support import expected_conditions as EC
    from selenium.webdriver.common.by import By
    from selenium.common.exceptions import TimeoutException
    from selenium.webdriver.common.keys import Keys
    url = "https://translate.google.com/"
    browser = webdriver.Chrome(executable_path='C:\SeleniumDrivers\chromedriver')
    browser.maximize_window()
    browser.get(url)

    #changing translate_from language
    browser.find_element_by_xpath("//html/body/div[2]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]").click()
    browser.find_element_by_id("sl_list-search-box").send_keys(translate_from,Keys.RETURN)

    #changing trnaslate_to language
    browser.find_element_by_xpath("//html/body/div[2]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/div[4]/div[3]").click()
    browser.find_element_by_id("tl_list-search-box").send_keys(translate_to,Keys.RETURN)
    
    #making empty DataFrame
    initial_df = pd.DataFrame({str(translate_from) : [],
                               str(translate_to) : []})
    translation_url = browser.current_url
    for i in range(len(translate_objective_list)):
        translation_objective = translate_objective_list[i]
        translation_objective_url = translation_url + "&text=" + translation_objective
        browser.get(translation_objective_url)
        try:
            myElem = WebDriverWait(browser, 5).until(EC.presence_of_element_located((By.XPATH, "//html/body/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div[2]/div[1]/div[2]/div/span[1]/span")))
            passages = browser.find_elements_by_xpath('/html/body/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div[2]/div[1]/div[2]/div/span[1]/span')
            full_string = ""
            for j in range(len(passages)):
                full_string = full_string + passages[j].text
            answer_df = pd.DataFrame({str(translate_from) : [translate_objective_list[i]],
                                      str(translate_to) : [full_string]}, 
                                     index = [str(i)])
        except TimeoutException:
            try:
                myElem = WebDriverWait(browser, 2).until(EC.presence_of_element_located((By.XPATH, "//html/body/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div[2]/div[1]/div[2]/div/span[1]")))
                full_string = browser.find_element_by_xpath("//html/body/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div[2]/div[1]/div[2]/div/span[1]").text
                answer_df = pd.DataFrame({str(translate_from) : [translate_objective_list[i]],
                          str(translate_to) : [full_string]}, 
                         index = [str(i)])
            except:
                print("Loading took too much time!")
                pass
        initial_df = pd.concat([initial_df, answer_df])
        browser.find_element_by_id("source").clear()
    initial_df.to_excel("translation_outcome.xlsx",encoding='utf_8_sig')
    print("translation_outcome.xlsx is done!")
